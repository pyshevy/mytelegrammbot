from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from settings.get_kb import create_kb

LIST_DOCTOR_BIG = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="–í—Ä–∞—á —Ç—Ä–∞–≤–º–∞—Ç–æ–ª–æ–≥", callback_data="—Ç—Ä–∞–≤–º–∞—Ç–æ–ª–æ–≥"),
        ],
        [
            InlineKeyboardButton(text="–¢–µ—Ä–∞–ø–µ–≤—Ç-—É—á–∞—Å—Ç–∫–æ–≤—ã–π", callback_data="—Ç–µ—Ä–∞–ø–µ–≤—Ç"),
        ],
        [
            InlineKeyboardButton(text="–í—Ä–∞—á –∏–Ω—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç", callback_data="–∏–Ω—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç"),
        ],
        [
            InlineKeyboardButton(text="–í—Ä–∞—á –æ—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥", callback_data="–æ—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥"),
        ],
        [
            InlineKeyboardButton(text="–í—Ä–∞—á –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç", callback_data="–ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç"),
        ],
        [
            InlineKeyboardButton(text="–í—Ä–∞—á –Ω–µ–≤—Ä–æ–ª–æ–≥", callback_data="–Ω–µ–≤—Ä–æ–ª–æ–≥"),
        ],
        [
            InlineKeyboardButton(text="–í—Ä–∞—á –¥–µ—Ä–º–∞—Ç–æ–≤–µ–Ω–µ—Ä–æ–ª–æ–≥", callback_data="–¥–µ—Ä–º–∞—Ç–æ–≤–µ–Ω–µ—Ä–æ–ª–æ–≥"),
        ],
        [
            InlineKeyboardButton(text="–í—Ä–∞—á –æ—Ç–æ—Ä–∏–Ω–æ-–ª–∞—Ä–∏–Ω–≥–æ–ª–æ–≥", callback_data="–æ—Ç–æ—Ä–∏–Ω–æ-–ª–∞—Ä–∏–Ω–≥–æ–ª–æ–≥"),
        ],
        [
            InlineKeyboardButton(text="–ó—É–±–Ω–æ–π –≤—Ä–∞—á", callback_data="–∑—É–±–Ω–æ–π"),
        ],
        [
            InlineKeyboardButton(text="–í—Ä–∞—á —É—Ä–æ–ª–æ–≥", callback_data="—É—Ä–æ–ª–æ–≥"),
        ],
        [
            InlineKeyboardButton(text="‚¨ÖÔ∏è–í—ã–±–æ—Ä –æ—Ç–¥–µ–ª–µ–Ω–∏—è‚¨ÖÔ∏è", callback_data="input_hospital"),
        ]
    ],
)

LIST_DOCTOR_KIDS = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="–ü–µ–¥–∏–∞—Ç—Ä-—É—á–∞—Å—Ç–∫–æ–≤—ã–π", callback_data="–ø–µ–¥–∏–∞—Ç—Ä_kid"),
            InlineKeyboardButton(text="–ó—É–±–Ω–æ–π –≤—Ä–∞—á", callback_data="–∑—É–±–Ω–æ–π_kid"),
        ],
        [
            InlineKeyboardButton(text="‚¨ÖÔ∏è–í—ã–±–æ—Ä –æ—Ç–¥–µ–ª–µ–Ω–∏—è‚¨ÖÔ∏è", callback_data="input_hospital"),
        ]
    ],
)

LIST_HOSPITAL = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="–í–∑—Ä–æ—Å–ª–∞—è –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞", callback_data="big"),
            InlineKeyboardButton(text="–î–µ—Ç—Å–∫–∞—è –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞", callback_data="kids"),
        ],
        [
            InlineKeyboardButton(text="‚¨ÖÔ∏è–í—ã—Ö–æ–¥‚¨ÖÔ∏è", callback_data="menu"),
        ]
    ],
)


def hospitals():
    builder = InlineKeyboardBuilder()
    builder.row(*[
        InlineKeyboardButton(text="–í–∑—Ä–æ—Å–ª–∞—è –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞", callback_data="big"),
        InlineKeyboardButton(text="–î–µ—Ç—Å–∫–∞—è –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞", callback_data="kids"),
        InlineKeyboardButton(text="‚¨ÖÔ∏è–í—ã—Ö–æ–¥‚¨ÖÔ∏è", callback_data="menu")
    ],
        width=2
    )

    return builder.as_markup()


def start_menu():
    builder = InlineKeyboardBuilder()
    builder.row(*[
            InlineKeyboardButton(text="–ó–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–∏–µ–º", callback_data="writing"),
            InlineKeyboardButton(text="–ú–æ–∏ –∑–∞–ø–∏—Å–∏", callback_data="my_app"),
            InlineKeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="info")
        ],
        width=3
    )

    return builder.as_markup()


def info():
    builder = InlineKeyboardBuilder()
    builder.row(*[
            InlineKeyboardButton(text="O –±–æ–ª—å–Ω–∏—Ü–µ", callback_data="info_hospital"),
            InlineKeyboardButton(text="O –≤—Ä–∞—á–∞—Ö", callback_data="info_doctors"),
            InlineKeyboardButton(text="–ó–∞–∫—Ä—ã—Ç—å", callback_data="menu")
        ],
        width=1
    )

    return builder.as_markup()

EXIT = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="–í –º–µ–Ω—é", callback_data="menu"),
        ]
    ],
)

EXIT_for_conf = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="–í –º–µ–Ω—é", callback_data="menu_conf"),
        ]
    ],
)

DATE = InlineKeyboardMarkup(
    inline_keyboard=create_kb(),
)

CONF = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é‚úÖ", callback_data="OK"),
        ],
        [
            InlineKeyboardButton(text="‚ùå–û—Ç–º–µ–Ω–∞‚ùå", callback_data="menu"),
        ],
    ],
)

ERROR_KB = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="üë®‚Äçüíª–ù–∞–ø–∏—Å–∞—Ç—å –≥–ª–∞–≤–Ω–æ–º—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É (CEO)üë®‚Äçüíª", url='https://t.me/pyshevy'),
        ],
        [
            InlineKeyboardButton(text="üß≥–í –º–µ–Ω—éüß≥", callback_data="menu"),
        ],
    ],
)

INPUT_APP = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="‚¨ÖÔ∏è–í—ã–±–æ—Ä –∑–∞–ø–∏—Å–∏‚¨ÖÔ∏è", callback_data='menu_app'),
        ],
        [
            InlineKeyboardButton(text="üìÑ–¢–∞–ª–æ–ΩüìÑ", callback_data='get_talon'),
        ],
        [
            InlineKeyboardButton(text="üß≥–í –º–µ–Ω—éüß≥", callback_data="menu_app_2"),
        ],
    ],
)


class Pagination(CallbackData, prefix='pag'):
    action: str
    page: int


def paginator(page: int = 0):
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data=Pagination(action='prev', page=page).pack()),
        InlineKeyboardButton(text='‚û°Ô∏è', callback_data=Pagination(action='next', page=page).pack()),
        InlineKeyboardButton(text='üö´–ó–∞–∫—Ä—ã—Ç—åüö´', callback_data=Pagination(action='close', page=page).pack()),
        width=2
    )

    return builder.as_markup()